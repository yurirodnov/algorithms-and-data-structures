Основная идея

    Выбор опорного элемента (pivot):
        Из массива выбирается один элемент, называемый опорным. От его выбора зависит эффективность алгоритма.
        Обычно опорный элемент выбирается как:
            Первый элемент массива.
            Последний элемент массива.
            Случайный элемент.
            Медиана (в некоторых реализациях для оптимизации).

    Разделение массива:
        Все элементы, меньшие опорного, перемещаются в левую часть массива.
        Все элементы, большие опорного, перемещаются в правую часть массива.
        Опорный элемент занимает своё окончательное место.

    Рекурсивная сортировка:
        Левый и правый подмассивы сортируются рекурсивно тем же методом.
        Процесс повторяется, пока размер подмассива не станет равным 1 (или 0), что означает завершение сортировки.

Преимущества

    Скорость: В среднем имеет временную сложность O(nlog⁡n)O(nlogn).
    Память: Быстрая сортировка является внутренним алгоритмом, что значит, она не требует дополнительной памяти для массивов (если реализована "на месте").

Недостатки

    Худший случай: Если опорный элемент постоянно выбирается неудачно (например, массив уже отсортирован, а pivot — крайний элемент), временная сложность возрастает до O(n2)O(n2).
    Чувствительность к выбору pivot — от этого сильно зависит производительность.

Пример работы

Для массива [3, 6, 8, 10, 1, 2, 1]:

    Выбор pivot (например, 3).
    Разделение:
        Левый подмассив (меньше 3): [1, 2, 1].
        Правый подмассив (больше 3): [6, 8, 10].
    Рекурсия:
        Сортируем [1, 2, 1] и [6, 8, 10].
        Повторяем процесс до сортировки каждого подмассива.

Итог: [1, 1, 2, 3, 6, 8, 10].
Оптимизации

    Выбор медианы из трёх элементов: Вместо случайного выбора pivot, берутся три элемента (первый, последний, средний) и выбирается медиана.
    Хвостовая рекурсия: Уменьшает глубину рекурсии, сохраняя производительность.